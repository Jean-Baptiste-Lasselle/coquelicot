version: '3'

services:
  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    container_name: 'marguerite_gitlab'
    restart: always
#     hostname: "gitlab"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.marguerite.io/'
        gitlab_rails['gitlab_shell_ssh_port'] = 222
        gitlab_rails['lfs_enabled'] = true
        nginx['listen_port'] = 8081
    ports:
      - "8081:8081"
      - "4443:443"
      - "2222:222"
    expose:
      - "3000"
      - "8081"
      - "4443"
      - "2222"
      - "80"
      - "222"
      - "443"
    volumes:
      - ./gitlab/config:/etc/gitlab
      - ./gitlab/logs:/var/log/gitlab
      - ./gitlab/data:/var/opt/gitlab
    networks:
      - devops
#       devops:
#         ipv4_address: 192.168.160.4

  runner:
    build: ./gitlab/runner/
    image: jbl/gitlab-runner:latest
    container_name: 'runner'
#     hostname: "runner"
    restart: "always"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#     links:
#       - marguerite_gitlab
    environment:
      - GITLAB_HOST=marguerite_gitlab:8081
    ports:
      - "8000:8000"
    expose:
      - "8000"
    networks:
      - devops
#       devops:
#         ipv4_address: 192.168.160.5

  mongo:
    # image: mongo:latest
    image: marguerite/mongo:1.0.0    
    build: ./mongodb/construction/
    # hostname: "mongo"
    container_name: 'mongo'
    volumes:
     - ./db/data:/data/db
     - ./db/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0
    expose:
      - "27017"
    ports:
      - 27017:27017
    networks:
      - devops
#       devops:
#         ipv4_address: 192.168.160.6

  mongo-init-replica:
    # image: mongo:3.2
    image: mongo:latest
    container_name: 'mongo-init-replica'
    # - il FAUDRA remplacer ce sleep par une meilleure solution
    # command: 'mongo mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'
    command: 'mongo mongo/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''mongo:27017'' } ]})"'
#     links:
#       - mongo:mongo
    networks:
      - devops
#     expose:
#       - 27017
    depends_on:
      - mongo
#     restart: always
  rocketchat:
    image: rocketchat/rocket.chat:latest
#     hostname: 'rocketchat'
    container_name: 'rocketchat'
    volumes:
      - ./rocketchat/uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=http://rocketchat.marguerite.io:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local?replicaSet=rs0
      - MAIL_URL="smtp://smtp.google.com"
#     links:
#       - mongo:mongo
#       - marguerite_gitlab:marguerite_gitlab
    ports:
      - 3000:3000
    expose:
      - "3000"
    depends_on:
      - mongo
    networks:
      - devops
#       devops:
#         ipv4_address: 192.168.160.8
    restart: always
  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  hubot:
    image: rocketchat/hubot-rocketchat:latest
#     hostname: "hubot"
    container_name: 'hubot'
    environment:
      - ROCKETCHAT_URL=rocketchat:3000
      - ROCKETCHAT_ROOM=devops
      # - ROCKETCHAT_USER=rocket.cat
      - ROCKETCHAT_USER=jbl
      # - ROCKETCHAT_PASSWORD=bot
      - ROCKETCHAT_PASSWORD=jbl
      - ROCKETCHAT_AUTH=password
      - BOT_NAME=jblrocks
      - LISTEN_ON_ALL_PUBLIC=true
      - GITLAB_URL=http://marguerite_gitlab:8081/api/v3/
      - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics,hubot-rocketchat-gitlab
      - GITLAB_API_KEY="cNhsExCcNhsExicNhsExx"
      - GITLAB_TOKEN=cNhsExCcNhsExicNhsExx
      - GITLAB_RECORD_LIMIT=100

#     links:
#       - rocketchat:rocketchat
#       - marguerite_gitlab:marguerite_gitlab
    volumes:
      - ./hubot/scripts:/home/hubot/scripts
    expose:
      - 3001
    ports:
      - 3001:3001
    # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
    networks:
      - devops
#       devops:
#         ipv4_address: 192.168.160.9

  nginx:
    image: nginx
#     hostname: "proxy"
    container_name: "proxy"
    volumes:
      - ./nginx/chatops.conf:/etc/nginx/conf.d/chatops.conf
#       - ./nginx/hosts:/etc/hosts
      - ./nginx/logs:/var/log/nginx
      - ./nginx/certificates:/etc/nginx/certificates/
    ports:
      - "8090:80"
      - "443:443"
#      - "22:22"
    expose:
      - "3000"
      - "80"
      - "443"
#      - "22"
    environment:
#       - NGINX_HOST=marguerite.io
#       - GIT_HOST=gitlab.marguerite.io
#       - CHAT_HOST=rocketchat.marguerite.io
      - NGINX_PORT=80
      - NGINX_SSL=443
#       - NGINX_SSH=22
#     links:
#       - rocketchat:rocketchat
#       - marguerite_gitlab:marguerite_gitlab
    networks:
      - devops
#       devops:
#         ipv4_address: 192.168.160.10
    depends_on:
      - rocketchat

# --- Tests : Réseau
  sondereseau:
    # image: mongo:3.2
    image: marguerite/sonde-reseau:0.0.1
    build: ./tests/sondereseau/
#     hostname: "sondereseau"
    container_name: 'sondereseau'
    tty: true
#     command: yum update -y && yum install -y iputils && ping -c 4 localhost
    networks:
      - devops
    # restart: 'always'


networks:
  devops:
    # name: 'reseau-devops'
    driver: bridge
#     external: true 
#     ipam:
#       config:
#         - subnet: 192.168.160.0/24
#         - gateway: 192.168.160.1
#         # - gateway: 172.16.1.1
